 Card(
        modifier = Modifier
            .fillMaxWidth(0.50f)
            .height(150.dp)
            .padding(horizontal = 16.dp)
            .clip(RoundedCornerShape(16.dp)),
        colors = CardDefaults.cardColors(
            containerColor = MaterialTheme.colorScheme.surfaceVariant
        ),
        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp)
    ) {

        Canvas(
            modifier = Modifier.fillMaxSize(),
        ) {


            drawRect(
                color = backgroundColor,
                topLeft = Offset(x = size.width - (cardSize.value / 2f) - 7.5f, y = 0f),
                size = size / 5f
            )

            drawRect(
                color = backgroundColor,
                topLeft = Offset(x = size.width - radiusPx + (radiusPx * 0.2f), y = 12f),
                size = size / 2.5f,
            )

            drawRect(
                color = backgroundColor,
                topLeft = Offset(x = size.width * 0.55f, y = -size.height * 0.4f),
                size = size / 2f,
            )

            drawCircle(
                color = backgroundColor,
                radius = cardSize.value / 1.5f,
                center = Offset(
                    x = size.width - radiusPx + (radiusPx * 0.15f),
                    y = radiusPx - (radiusPx * 0.2f)
                )
            )

            drawCircle(
                color = surfaceVariantColor,
                radius = radiusPx * 0.9f,
                center = Offset(
                    x = size.width / 1.75f,
                    y = radiusPx - (radiusPx * 0.2f)
                )
            )

            drawCircle(
                color = surfaceVariantColor,
                radius = radiusPx * 0.9f,
                center = Offset(
                    x = size.width - radiusPx + (radiusPx * 0.2f),
                    y = radiusPx + (radiusPx * 2.99f)
                )
            )

            drawCircle(
                color = Color.Red,
                radius = radiusPx * 1f,
                center = Offset(
                    x = size.width - radiusPx + (radiusPx * 0f),
                    y = radiusPx - (radiusPx * 0f)
                )
            )

        }
    }